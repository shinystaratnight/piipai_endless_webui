$shadow: 0px 4px 6px 0;

.ng-invalid button[type='submit'] {
  position: relative;
  border-color: transparent !important;
  background-color: rgba($primary, 0.55) !important;
  cursor: not-allowed;

  @each $item in $themes {
    .#{$item}-theme & {
      background-color: rgba(map-get($theme-colors, $item), 0.55) !important;
    }
  }

  &.button-save:hover::after,
  &.save:hover::after {
    position: absolute;
    display: block;
    top: -35px;
    left: 0;
    width: 240px;
    padding: 0.2rem;
    font-size: 14px;
    border-radius: 0.25rem;
    background-color: rgba($gray, 0.8);
    content: 'Please fill all the REQUIRED fields';
    z-index: 1;
  }
}

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 100px;
  transition: 0.4s all;

  & > fa-icon {
    margin-right: 0.25rem;
  }

  &:focus,
  &:active {
    box-shadow: none;
  }
}

.app-button {
  &__size-m,
  &__size-l {
    padding: 6px !important;
    font-size: 14px !important;
    line-height: 18px !important;
  }

  &__size-m {
    min-width: 90px;
  }

  &__size-l {
    min-width: 160px;
    height: auto !important;
  }

  &__shadow {
    box-shadow: $shadow rgba(black, 0.3);

    &:hover:not([disabled]) {
      box-shadow: $shadow rgba(black, 0.2);
    }

    &:active:not([disabled]) {
      box-shadow: none;
    }

    &-success {
      box-shadow: $shadow rgba($success, 0.3);

      &:hover,
      &:focus {
        box-shadow: $shadow rgba($success, 0.2);
      }
    }

    &-danger {
      box-shadow: $shadow rgba($danger, 0.3);

      &:hover,
      &:focus {
        box-shadow: $shadow rgba($danger, 0.2);
      }
    }
  }

  &__default {
    $shadow: 0 1px 5px rgba(43, 46, 51, 0.2);
    background-color: #fdfdfd;
    box-shadow: $shadow;

    &:focus,
    &:hover,
    &:active {
      box-shadow: $shadow;
    }

    &:hover {
      background-color: #f5f5f5;
    }

    &:active {
      background-color: #f2f2f2;
    }
  }

  &__success {
    background-color: #e7f3eb;

    &:hover,
    &:focus {
      background-color: #d6f1df;
    }

    &:active {
      background-color: #98dcae;
    }
  }

  &__primary {
    background-color: rgba($primary, 0.2);

    &:hover:not([disabled]),
    &:focus:not([disabled]) {
      background-color: rgba($primary, 0.3);
    }

    &:active:not([disabled]) {
      background-color: rgba($primary, 0.5);
    }
  }

  &__danger {
    background-color: #fff0eb;

    &:hover,
    &:focus {
      background-color: #fededa;
    }

    &:active {
      background-color: #fcada2;
    }
  }

  &__mr {
    margin-right: 12px;
  }

  @include media-breakpoint-down('sm') {
    &__resize {
      width: 172px;
    }
  }
}

.btn-secondary {
  color: #292b2c;
  background-color: #fff;
  border-color: transparent;
}

.btn-default {
  color: $gray;
  background: #fdfdfd;
  border: none;
}

.btn-primary {
  &:focus {
    box-shadow: 0 0 2px rgba($primary, 0.5);

    @each $item in $themes {
      .#{$item}-theme & {
        box-shadow: 0 0 2px rgba(map-get($theme-colors, $item), 0.5);
      }
    }
  }
}

.btn-link {
  color: $primary;

  @each $item in $themes {
    .#{$item}-theme & {
      color: map-get($theme-colors, $item);
    }
  }
}

.btn-shadow {
  box-shadow: $shadow rgba(black, 0.1);

  &:active {
    box-shadow: none;
  }
}

.btn-outline-primary {
  font-size: 0.625rem;
  padding: 0.25rem;

  @each $item in $themes {
    .#{$item}-theme & {
      border-color: map-get($theme-colors, $item);
      color: map-get($theme-colors, $item);

      &:hover {
        background-color: map-get($theme-colors, $item);
        color: white;

        &.disabled {
          background-color: #fff;
          color: map-get($theme-colors, $item);
          cursor: default;
        }
      }
    }
  }
}

.big-btn {
  height: 42px;
  width: 160px;
}

app-form-button:not(:first-child) {
  .danger-btn,
  .warning-btn {
    margin-top: 6px;
  }
}

@each $item in $themes {
  .#{$item}-theme .bg-primary,
  .#{$item}-theme button.bg-primary:hover {
    background-color: map-get($theme-colors, $item) !important;
  }
}

@each $item in $themes {
  .#{$item}-theme button.btn.active {
    border-color: map-get($theme-colors, $item);

    background-color: map-get($theme-colors, $item);
  }
}
