body {
  height: 89vh;
  font-family: 'Roboto', sans-serif;
}

body.r3sourcer {
  height: 91vh;
  background-color: #f1f1f1;
}

.icon {
  font-size: 14px !important;
  cursor: pointer;
}

.modal-content {
  max-height: 90vh;
  margin-top: 5vh;
  overflow: auto;
  box-shadow: 0 0 10px 4px rgba(0, 0, 0, .2);

  .modal-header-wrapper {
    position: sticky;
    width: 100%;
    top: 0;
    z-index: 100;
  }

  .modal-title {
    overflow: hidden;
    white-space: nowrap;
  }

  @include media-breakpoint-down('md') {
    max-height: 100%;
  }

}

.datepicker {
  flex-wrap: wrap;

  .input-group-addon {
    width: 38px;
  }

  .input-group:first-child {
    margin-bottom: .2rem;
  }

  h4 {
    font-size: 1rem;
  }
}

label, b {
  font-weight: 500;
}

iframe.send-sms {
  width: 100%;
  height: 80vh;
}

.send-message.close {
  position: fixed;
  right: -1rem;
  top: .5rem;
  color: $brand-primary;
  z-index: 1000;

  @each $item in $themes {
    .#{$item}-theme & {
      color: map-get($theme-colors, $item);
    }
  }
}

.pull-right {
  float: right;
}

.pull-left {
  float: left;
}

.color-preview {
  display: inline-block;
  width: 3rem;
  height: 2rem;
  border-radius: .2rem;
  transition: all .4s;
}

input:checked ~ .color-preview {
  transform: scale(1.2);
}

.image-preview {
  width: 150px;
  margin-bottom: 1rem;
  border-radius: .3rem;
  border: 5px solid white;
  box-shadow: 0 0 0 2px black;
}

.group-button {
  font-size: .7rem;
  background-color: lighten($brand-primary, 15%);

  @each $item in $themes {
    .#{$item}-theme & {
      background-color: lighten(map-get($theme-colors, $item), 15%) !important;
    }
  }

  &:hover,
  &:focus {
    background-color: darken($brand-primary, 10%);

    @each $item in $themes {
      .#{$item}-theme & {
        background-color: darken(map-get($theme-colors, $item), 10%) !important;
      }
    }
  }
}

.form-element-content {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.form-element-checkbox {
  display: inline-flex;
  margin-left: .5rem;
}

.site-page .form-element {
  display: flex;
  flex-wrap: wrap;

  &-label {
    flex-basis: 200px;
  }

  &-content{
    display: flex;
    flex-direction: row;
    align-items: center;
    flex-basis: calc(100% - 200px);
    min-width: 200px;
    max-width: 300px;
  }

  &-checkbox:not(:empty) {
    display: flex;
    align-items: center;
    margin-left: 0;

    @include media-breakpoint-down('xs') {
      order: -1;
      margin-right: .5rem;
    }
  }

  &-picture:not(:empty) {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  @include media-breakpoint-down('xs') {
    &-label,
    &-content {
      flex-basis: auto;
      flex-direction: column;
      align-items: flex-start;
      justify-content: center;
    }

    &-content {
      width: 100%;
      max-width: none;
      min-width: auto;
    }
  }
}

.modal-form .form-element-content {
  flex-wrap: wrap;
}

.site-page .form-element {
  &.custom {
    flex-direction: column;
    justify-content: center;

    .form-element-label {
      text-transform: uppercase;
      flex-basis: auto;
    }

    .form-element-content{
      display: none;
    }
  }
}

.form-list .form-group,
.form-list .form-control {
  margin-bottom: 0;
}

@include media-breakpoint-down('md') {
  .list-related {
    overflow-x: auto;
  }
}

@each $item in $themes {
  .#{$item}-theme .page-item.active .page-link {
    background-color: map-get($theme-colors, $item) !important;
    border-color: map-get($theme-colors, $item) !important;
  }
}

@each $item in $themes {
  .#{$item}-theme .bg-primary {
    background-color: map-get($theme-colors, $item) !important;
  }
}

@each $item in $themes {
  .#{$item}-theme .btn-primary {
    border-color: map-get($theme-colors, $item);
    background-color: map-get($theme-colors, $item) !important;
  }
}

@each $item in $themes {
  .#{$item}-theme .text-primary {
    color: map-get($theme-colors, $item) !important;
  }
}

@each $item in $themes {
  .#{$item}-theme a {
    color: map-get($theme-colors, $item);
  }
}

@each $item in $themes {
  .#{$item}-theme .nav-link.active {
    background-color: map-get($theme-colors, $item) !important;
  }
}
